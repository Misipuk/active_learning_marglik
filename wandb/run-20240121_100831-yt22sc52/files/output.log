
Pool shape : torch.Size([40000, 1, 28, 28])
Traceback (most recent call last):
  File "/dss/dsshome1/0D/ge32jaq2/epig_plus_orig_marglik/active_learning_marglik/run_acq_epig_marglik_40k.py", line 304, in <module>
    main(**args)
  File "/dss/dsshome1/0D/ge32jaq2/epig_plus_orig_marglik/active_learning_marglik/run_acq_epig_marglik_40k.py", line 187, in main
    learner.fit(dataset.get_train_loader(batch_size=batch_size))
  File "/dss/dsshome1/0D/ge32jaq2/epig_plus_orig_marglik/active_learning_marglik/active_learning/active_learners.py", line 64, in fit
    la, _, margliks = marglik_optimization(
  File "/dss/dsshome1/0D/ge32jaq2/epig_plus_orig_marglik/active_learning_marglik/active_learning/marglik.py", line 293, in marglik_optimization
    marglik = -lap.log_marginal_likelihood(prior_prec, sigma_noise) / N
  File "/usr/local/lib/python3.10/dist-packages/laplace/baselaplace.py", line 528, in log_marginal_likelihood
    return self.log_likelihood - 0.5 * (self.log_det_ratio + self.scatter)
  File "/usr/local/lib/python3.10/dist-packages/laplace/baselaplace.py", line 466, in log_det_ratio
    return self.log_det_posterior_precision - self.log_det_prior_precision
  File "/usr/local/lib/python3.10/dist-packages/laplace/baselaplace.py", line 935, in log_det_posterior_precision
    return self.posterior_precision.logdet()
  File "/usr/local/lib/python3.10/dist-packages/laplace/baselaplace.py", line 929, in posterior_precision
    return self.H * self._H_factor + self.prior_precision
  File "/usr/local/lib/python3.10/dist-packages/laplace/utils/matrix.py", line 325, in __mul__
    eigenvalues = [[pow(scalar, 1/len(ls)) * l for l in ls] for ls in self.eigenvalues]
  File "/usr/local/lib/python3.10/dist-packages/laplace/utils/matrix.py", line 325, in <listcomp>
    eigenvalues = [[pow(scalar, 1/len(ls)) * l for l in ls] for ls in self.eigenvalues]
  File "/usr/local/lib/python3.10/dist-packages/laplace/utils/matrix.py", line 325, in <listcomp>
    eigenvalues = [[pow(scalar, 1/len(ls)) * l for l in ls] for ls in self.eigenvalues]
KeyboardInterrupt
Traceback (most recent call last):
  File "/dss/dsshome1/0D/ge32jaq2/epig_plus_orig_marglik/active_learning_marglik/run_acq_epig_marglik_40k.py", line 304, in <module>
    main(**args)
  File "/dss/dsshome1/0D/ge32jaq2/epig_plus_orig_marglik/active_learning_marglik/run_acq_epig_marglik_40k.py", line 187, in main
    learner.fit(dataset.get_train_loader(batch_size=batch_size))
  File "/dss/dsshome1/0D/ge32jaq2/epig_plus_orig_marglik/active_learning_marglik/active_learning/active_learners.py", line 64, in fit
    la, _, margliks = marglik_optimization(
  File "/dss/dsshome1/0D/ge32jaq2/epig_plus_orig_marglik/active_learning_marglik/active_learning/marglik.py", line 293, in marglik_optimization
    marglik = -lap.log_marginal_likelihood(prior_prec, sigma_noise) / N
  File "/usr/local/lib/python3.10/dist-packages/laplace/baselaplace.py", line 528, in log_marginal_likelihood
    return self.log_likelihood - 0.5 * (self.log_det_ratio + self.scatter)
  File "/usr/local/lib/python3.10/dist-packages/laplace/baselaplace.py", line 466, in log_det_ratio
    return self.log_det_posterior_precision - self.log_det_prior_precision
  File "/usr/local/lib/python3.10/dist-packages/laplace/baselaplace.py", line 935, in log_det_posterior_precision
    return self.posterior_precision.logdet()
  File "/usr/local/lib/python3.10/dist-packages/laplace/baselaplace.py", line 929, in posterior_precision
    return self.H * self._H_factor + self.prior_precision
  File "/usr/local/lib/python3.10/dist-packages/laplace/utils/matrix.py", line 325, in __mul__
    eigenvalues = [[pow(scalar, 1/len(ls)) * l for l in ls] for ls in self.eigenvalues]
  File "/usr/local/lib/python3.10/dist-packages/laplace/utils/matrix.py", line 325, in <listcomp>
    eigenvalues = [[pow(scalar, 1/len(ls)) * l for l in ls] for ls in self.eigenvalues]
  File "/usr/local/lib/python3.10/dist-packages/laplace/utils/matrix.py", line 325, in <listcomp>
    eigenvalues = [[pow(scalar, 1/len(ls)) * l for l in ls] for ls in self.eigenvalues]
KeyboardInterrupt