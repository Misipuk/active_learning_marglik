[run_image_classification.py:70]INFO: Initial test log-likelihood: -2.2665
[run_image_classification.py:71]INFO: Initial test Bayes log-likelihood: -2.2606
[run_image_classification.py:72]INFO: Initial accuracy: 24.57%
[run_image_classification.py:92]INFO: Test log-likelihood at 21: -2.2051
[run_image_classification.py:93]INFO: Test Bayes log-likelihood at 21: -2.2353
[run_image_classification.py:94]INFO: Test accuracy: 21.51%
[run_image_classification.py:92]INFO: Test log-likelihood at 22: -2.2024
[run_image_classification.py:93]INFO: Test Bayes log-likelihood at 22: -2.2456
[run_image_classification.py:94]INFO: Test accuracy: 19.99%
[run_image_classification.py:92]INFO: Test log-likelihood at 23: -2.1953
[run_image_classification.py:93]INFO: Test Bayes log-likelihood at 23: -2.2514
[run_image_classification.py:94]INFO: Test accuracy: 19.95%
[run_image_classification.py:92]INFO: Test log-likelihood at 24: -2.1895
[run_image_classification.py:93]INFO: Test Bayes log-likelihood at 24: -2.2398
[run_image_classification.py:94]INFO: Test accuracy: 20.00%
[run_image_classification.py:92]INFO: Test log-likelihood at 25: -2.1922
[run_image_classification.py:93]INFO: Test Bayes log-likelihood at 25: -2.2550
[run_image_classification.py:94]INFO: Test accuracy: 19.78%
Traceback (most recent call last):
  File "/dss/dsshome1/0D/ge32jaq2/active_learning_marglik/active_learning/active_learners.py", line 124, in bald
    p_samples = self.la.predictive_samples(x, n_samples=150)
  File "/usr/local/lib/python3.10/dist-packages/laplace/baselaplace.py", line 660, in predictive_samples
    f_mu, f_var = self._glm_predictive_distribution(x)
  File "/usr/local/lib/python3.10/dist-packages/torch/utils/_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/laplace/baselaplace.py", line 674, in _glm_predictive_distribution
    Js, f_mu = self.backend.jacobians(X, enable_backprop=self.enable_backprop)
  File "/usr/local/lib/python3.10/dist-packages/laplace/curvature/asdl.py", line 44, in jacobians
    f = batch_gradient(self.model, loss_fn, x, None).detach()
  File "/usr/local/lib/python3.10/dist-packages/asdfghjkl/gradient.py", line 58, in batch_gradient
    f = model(inputs)
  File "/usr/local/lib/python3.10/dist-packages/torch/nn/modules/module.py", line 1518, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/torch/nn/modules/module.py", line 1527, in _call_impl
    return forward_call(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/torch/nn/modules/container.py", line 215, in forward
    input = module(input)
  File "/usr/local/lib/python3.10/dist-packages/torch/nn/modules/module.py", line 1518, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/torch/nn/modules/module.py", line 1581, in _call_impl
    hook_result = hook(self, args, result)
  File "/usr/local/lib/python3.10/dist-packages/asdfghjkl/core.py", line 21, in forward_hook
    in_data = _preprocess_in_data(module, in_data, out_data)
  File "/usr/local/lib/python3.10/dist-packages/asdfghjkl/core.py", line 68, in _preprocess_in_data
    in_data = im2col_2d(in_data, module)
  File "/usr/local/lib/python3.10/dist-packages/asdfghjkl/utils.py", line 53, in im2col_2d
    Mx = F.unfold(
  File "/usr/local/lib/python3.10/dist-packages/torch/nn/functional.py", line 4756, in unfold
    return torch._C._nn.im2col(input, _pair(kernel_size), _pair(dilation), _pair(padding), _pair(stride))
KeyboardInterrupt
During handling of the above exception, another exception occurred:
Traceback (most recent call last):
  File "/dss/dsshome1/0D/ge32jaq2/active_learning_marglik/run_image_classification.py", line 157, in <module>
    main(**args)
  File "/dss/dsshome1/0D/ge32jaq2/active_learning_marglik/run_image_classification.py", line 81, in main
    bald_scores = learner.bald(dataset.get_pool_loader(batch_size=batch_size))
  File "/dss/dsshome1/0D/ge32jaq2/active_learning_marglik/active_learning/active_learners.py", line 126, in bald
    p_samples = self.la.predictive_samples(x, n_samples=150, diagonal_output = True)
  File "/usr/local/lib/python3.10/dist-packages/laplace/baselaplace.py", line 660, in predictive_samples
    f_mu, f_var = self._glm_predictive_distribution(x)
  File "/usr/local/lib/python3.10/dist-packages/torch/utils/_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/laplace/baselaplace.py", line 674, in _glm_predictive_distribution
    Js, f_mu = self.backend.jacobians(X, enable_backprop=self.enable_backprop)
  File "/usr/local/lib/python3.10/dist-packages/laplace/curvature/asdl.py", line 44, in jacobians
    f = batch_gradient(self.model, loss_fn, x, None).detach()
  File "/usr/local/lib/python3.10/dist-packages/asdfghjkl/gradient.py", line 58, in batch_gradient
    f = model(inputs)
  File "/usr/local/lib/python3.10/dist-packages/torch/nn/modules/module.py", line 1518, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/torch/nn/modules/module.py", line 1527, in _call_impl
    return forward_call(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/torch/nn/modules/container.py", line 215, in forward
    input = module(input)
  File "/usr/local/lib/python3.10/dist-packages/torch/nn/modules/module.py", line 1518, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/torch/nn/modules/module.py", line 1581, in _call_impl
    hook_result = hook(self, args, result)
  File "/usr/local/lib/python3.10/dist-packages/asdfghjkl/core.py", line 21, in forward_hook
    in_data = _preprocess_in_data(module, in_data, out_data)
  File "/usr/local/lib/python3.10/dist-packages/asdfghjkl/core.py", line 68, in _preprocess_in_data
    in_data = im2col_2d(in_data, module)
  File "/usr/local/lib/python3.10/dist-packages/asdfghjkl/utils.py", line 53, in im2col_2d
    Mx = F.unfold(
  File "/usr/local/lib/python3.10/dist-packages/torch/nn/functional.py", line 4756, in unfold
    return torch._C._nn.im2col(input, _pair(kernel_size), _pair(dilation), _pair(padding), _pair(stride))
KeyboardInterrupt